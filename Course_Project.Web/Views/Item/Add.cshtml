@model Course_Project.Web.ViewModels.ItemAddViewModel

<link href="~/css/item-add.css" rel="stylesheet" />
<h2>@Localizer["Add Item"]</h2>

<form asp-action="Add" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="Name">@Localizer["Name"]</label>
        <input asp-for="Name" class="form-control" />
    </div>
    @if (Model.Inventory.CustomSetOfIds.Count > 0)
    {
        <div class="form-group">
            <label asp-for="CustomIdString">@Localizer["Custom id"]</label>
            <input asp-for="CustomIdString" class="form-control" />
        </div>
    }
    <div class = "setofid" id="customIdsValContainer">
        @foreach (var field in Model.Inventory.CustomSetOfIds)
        {
                @switch (field.IdType)
                {
                    case IdType.Text:
                        {
                            <pre class="utf-preview">@Localizer["Single line(5 symbols)"]@field.Rule</pre>
                            break;
                        }
                    case IdType.Rand32Bit:
                        {
                        <pre class="utf-preview">@Localizer["(10 digits format 32 bit Integer with"] @field.Rule-</pre>
                            break;
                        }
                    case IdType.Rand20Bit:
                        {
                        <pre class="utf-preview">@Localizer["(8 digits format 20 bit Integer with"] @field.Rule)-</pre>
                            break;
                        }
                    case IdType.Rand9Digit:
                        {
                        <pre class="utf-preview">@Localizer["(9 digit Integer)"]@field.Rule</pre>
                            break;
                        }
                    case IdType.Rand6Digit:
                        {
                        <pre class="utf-preview">@Localizer["(6 digit Integer)"]@field.Rule</pre>
                            break;
                        }
                    case IdType.GUID:
                        {
                        <pre class="utf-preview">@Localizer["(Guid)"]@field.Rule</pre>
                            break;
                        }
                    case IdType.DateTime:
                        {
                        <pre class="utf-preview">@Localizer["(Date with value)"] @field.Rule-</pre>
                            break;
                        }
                    case IdType.Sequence:
                        {
                        <pre class="utf-preview">@Localizer["(Amount of items in inventory)"] @field.Rule</pre>
                            break;
                        }
                    default:
                        {
                        <pre class="utf-preview">@Localizer["Single line(5 symbols)"]@field.Rule</pre>
                        break;
                        }
                }
        }
    </div>
    <input type="hidden" name="CreatorName" value="@User.Identity.Name" />
    <input type="hidden" name="InvId" value="@Model.Inventory.PublicId" />
    @if(Model.Inventory.CustomElems.Count>0){
    <h4>@Localizer["Custom Fields"]</h4>
    }
    @for (int i = 0; i < Model.Inventory.CustomElems.Count; i++)
    {
        var field = Model.Inventory.CustomElems[i];

            <div class="form-group">
                <label>@field.Name</label>
            <input type="hidden" name="CustomFields[@i].FieldType" value="@field.FieldType" />
            <input type="hidden" name="CustomFields[@i].IsVisible" value="@( (field.IsVisible ?? false).ToString().ToLower() )" />
            <label>@field.Description</label>
                @switch (field.FieldType)
                {
                    case CustomFieldType.SingleLine:
                        {
                            <input type="text" name="CustomFields[@i].Value" class="form-control" />
                            break;
                        }
                    case CustomFieldType.MultiLine:
                        {
                            <textarea name="CustomFields[@i].Value" class="form-control"></textarea>
                            break;
                        }
                    case CustomFieldType.Numeric:
                        {
                            <input type="number" name="CustomFields[@i].NumericValue" class="form-control" />
                            break;
                        }
                    case CustomFieldType.Checkbox:
                        {
                            <input type="checkbox" name="CustomFields[@i].BoolValue" value="true" />
                            break;
                        }
                    case CustomFieldType.Link:
                        {
    
                            break;
                        }
                    default:
                        {
                            <input type="text" name="CustomFields[@i].Value" class="form-control" />
                            break;
                        }
                }
            </div>
    }
    <div class="form-group">
        <label for="ImageFile">@Localizer["Choose photo"]</label>
        <input name="ImageFile" id="ImageFile" type="file" class="form-control-file" accept="image/*">
        <span class="text-danger"></span>
    </div>
    <div id="imagePreview" class="mt-3"></div>
    <button id="submitBtn" type="submit" class="btn btn-primary">@Localizer["Add"]</button>
</form>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
        document.getElementById('ImageFile').addEventListener('change', function (e) {
        const file = e.target.files[0];
        if (file) {
            const previewContainer = document.getElementById('imagePreview');
            previewContainer.innerHTML = '';

            const img = document.createElement('img');
            img.src = URL.createObjectURL(file);
            img.classList.add('img-thumbnail');
            img.style.maxHeight = '200px';

            previewContainer.appendChild(img);
        }
    });
    $(function () {
            $("#addItemForm").on("submit", function () {
                var $btn = $("#submitBtn");
                $btn.prop("disabled", true).text("Отправка...");
            });
        });
</script>

